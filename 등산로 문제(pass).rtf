{\rtf1\ansi\ansicpg949\deff0\deflang1033\deflangfe1042{\fonttbl{\f0\fnil\fcharset129 \'b8\'bc\'c0\'ba \'b0\'ed\'b5\'f1;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang18\f0\fs20\'bb\'ef\'bc\'ba sw expert academy \par
\par
\par
1949. [\'b8\'f0\'c0\'c7 SW \'bf\'aa\'b7\'ae\'c5\'d7\'bd\'ba\'c6\'ae] \'b5\'ee\'bb\'ea\'b7\'ce \'c1\'b6\'bc\'ba\par
\'b9\'ae\'c1\'a6 \'b3\'bb\'bf\'eb\par
\'bd\'c3\'b0\'a3 : 50\'b0\'b3 \'c5\'d7\'bd\'ba\'c6\'ae\'c4\'c9\'c0\'cc\'bd\'ba\'b8\'a6 \'c7\'d5\'c3\'c4\'bc\'ad C\'c0\'c7 \'b0\'e6\'bf\'ec 3\'c3\'ca / C++\'c0\'c7 \'b0\'e6\'bf\'ec 3\'c3\'ca / Java\'c0\'c7 \'b0\'e6\'bf\'ec 3\'c3\'ca / Python\'c0\'c7 \'b0\'e6\'bf\'ec 15\'c3\'ca\par
\'b8\'de\'b8\'f0\'b8\'ae : \'c8\'fc, \'c1\'a4\'c0\'fb \'b8\'de\'b8\'f0\'b8\'ae \'c7\'d5\'c3\'c4\'bc\'ad 256MB \'c0\'cc\'b3\'bb, \'bd\'ba\'c5\'c3 \'b8\'de\'b8\'f0\'b8\'ae 1MB \'c0\'cc\'b3\'bb\par
\'a1\'d8 SW Expert \'be\'c6\'c4\'ab\'b5\'a5\'b9\'cc\'c0\'c7 \'b9\'ae\'c1\'a6\'b8\'a6 \'b9\'ab\'b4\'dc \'ba\'b9\'c1\'a6\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'bb \'b1\'dd\'c1\'f6\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\par
\'b5\'ee\'bb\'ea\'b7\'ce\'b8\'a6 \'c1\'b6\'bc\'ba\'c7\'cf\'b7\'c1\'b0\'ed \'c7\'d1\'b4\'d9.\par
\par
\'b5\'ee\'bb\'ea\'b7\'ce\'b8\'a6 \'b8\'b8\'b5\'e9\'b1\'e2 \'c0\'a7\'c7\'d1 \'ba\'ce\'c1\'f6\'b4\'c2 N * N \'c5\'a9\'b1\'e2\'b8\'a6 \'b0\'a1\'c1\'f6\'b0\'ed \'c0\'d6\'c0\'b8\'b8\'e7, \'c0\'cc\'b0\'f7\'bf\'a1 \'c3\'d6\'b4\'eb\'c7\'d1 \'b1\'e4 \'b5\'ee\'bb\'ea\'b7\'ce\'b8\'a6 \'b8\'b8\'b5\'e9 \'b0\'e8\'c8\'b9\'c0\'cc\'b4\'d9.\par
\par
\'b5\'ee\'bb\'ea\'b7\'ce \'ba\'ce\'c1\'f6\'b4\'c2 \'be\'c6\'b7\'a1 [Fig. 1]\'b0\'fa \'b0\'b0\'c0\'cc \'bc\'fd\'c0\'da\'b0\'a1 \'c7\'a5\'bd\'c3\'b5\'c8 \'c1\'f6\'b5\'b5\'b7\'ce \'c1\'d6\'be\'ee\'c1\'f6\'b8\'e7, \'b0\'a2 \'bc\'fd\'c0\'da\'b4\'c2 \'c1\'f6\'c7\'fc\'c0\'c7 \'b3\'f4\'c0\'cc\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'bd\'b4\'d9.\par
 \par
\par
 \par
\par
\'b5\'ee\'bb\'ea\'b7\'ce\'b8\'a6 \'b8\'b8\'b5\'e5\'b4\'c2 \'b1\'d4\'c4\'a2\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'b4\'d9.\par
\par
   \'a8\'e7 \'b5\'ee\'bb\'ea\'b7\'ce\'b4\'c2 \'b0\'a1\'c0\'e5 \'b3\'f4\'c0\'ba \'ba\'c0\'bf\'ec\'b8\'ae\'bf\'a1\'bc\'ad \'bd\'c3\'c0\'db\'c7\'d8\'be\'df \'c7\'d1\'b4\'d9.\par
\par
   \'a8\'e8 \'b5\'ee\'bb\'ea\'b7\'ce\'b4\'c2 \'bb\'ea\'c0\'b8\'b7\'ce \'bf\'c3\'b6\'f3\'b0\'a5 \'bc\'f6 \'c0\'d6\'b5\'b5\'b7\'cf \'b9\'dd\'b5\'e5\'bd\'c3 \'b3\'f4\'c0\'ba \'c1\'f6\'c7\'fc\'bf\'a1\'bc\'ad \'b3\'b7\'c0\'ba \'c1\'f6\'c7\'fc\'c0\'b8\'b7\'ce \'b0\'a1\'b7\'ce \'b6\'c7\'b4\'c2 \'bc\'bc\'b7\'ce \'b9\'e6\'c7\'e2\'c0\'b8\'b7\'ce \'bf\'ac\'b0\'e1\'c0\'cc \'b5\'c7\'be\'ee\'be\'df \'c7\'d1\'b4\'d9.\par
       \'c1\'ef, \'b3\'f4\'c0\'cc\'b0\'a1 \'b0\'b0\'c0\'ba \'b0\'f7 \'c8\'a4\'c0\'ba \'b3\'b7\'c0\'ba \'c1\'f6\'c7\'fc\'c0\'cc\'b3\'aa, \'b4\'eb\'b0\'a2\'bc\'b1 \'b9\'e6\'c7\'e2\'c0\'c7 \'bf\'ac\'b0\'e1\'c0\'ba \'ba\'d2\'b0\'a1\'b4\'c9\'c7\'cf\'b4\'d9.\par
\par
   \'a8\'e9 \'b1\'e4 \'b5\'ee\'bb\'ea\'b7\'ce\'b8\'a6 \'b8\'b8\'b5\'e9\'b1\'e2 \'c0\'a7\'c7\'d8 \'b5\'fc \'c7\'d1 \'b0\'f7\'c0\'bb \'c1\'a4\'c7\'d8\'bc\'ad \'c3\'d6\'b4\'eb K \'b1\'ed\'c0\'cc\'b8\'b8\'c5\'ad \'c1\'f6\'c7\'fc\'c0\'bb \'b1\'f0\'b4\'c2 \'b0\'f8\'bb\'e7\'b8\'a6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'d9.\par
\par
N * N \'c5\'a9\'b1\'e2\'c0\'c7 \'c1\'f6\'b5\'b5\'b0\'a1 \'c1\'d6\'be\'ee\'c1\'f6\'b0\'ed, \'c3\'d6\'b4\'eb \'b0\'f8\'bb\'e7 \'b0\'a1\'b4\'c9 \'b1\'ed\'c0\'cc K\'b0\'a1 \'c1\'d6\'be\'ee\'c1\'f8\'b4\'d9.\par
\par
\'c0\'cc\'b6\'a7 \'b8\'b8\'b5\'e9 \'bc\'f6 \'c0\'d6\'b4\'c2 \'b0\'a1\'c0\'e5 \'b1\'e4 \'b5\'ee\'bb\'ea\'b7\'ce\'b8\'a6 \'c3\'a3\'be\'c6 \'b1\'d7 \'b1\'e6\'c0\'cc\'b8\'a6 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'bb \'c0\'db\'bc\'ba\'c7\'cf\'b6\'f3.\par
\par
\par
[\'bf\'b9\'bd\'c3]\par
\par
\'c0\'a7 [Fig. 1]\'b0\'fa \'b0\'b0\'c0\'cc N = 5\'c0\'ce \'c1\'f6\'b5\'b5\'b0\'a1 \'c1\'d6\'be\'ee\'c1\'f8 \'b0\'e6\'bf\'ec\'b8\'a6 \'bb\'ec\'c6\'ec\'ba\'b8\'c0\'da.\par
\par
\'b0\'a1\'c0\'e5 \'b3\'f4\'c0\'ba \'ba\'c0\'bf\'ec\'b8\'ae\'b4\'c2 \'b3\'f4\'c0\'cc\'b0\'a1 9\'b7\'ce \'c7\'a5\'bd\'c3\'b5\'c8 \'bc\'bc \'b1\'ba\'b5\'a5\'c0\'cc\'b4\'d9.\par
\par
\'c0\'cc \'bc\'bc \'b0\'f7\'bf\'a1\'bc\'ad \'c3\'e2\'b9\'df\'c7\'cf\'b4\'c2 \'b0\'a1\'c0\'e5 \'b1\'e4 \'b5\'ee\'bb\'ea\'b7\'ce \'c1\'df \'c7\'cf\'b3\'aa\'b4\'c2 \'be\'c6\'b7\'a1 [Fig. 2]\'bf\'cd \'b0\'b0\'b0\'ed, \'c0\'cc \'b6\'a7 \'b1\'e6\'c0\'cc\'b4\'c2 5\'b0\'a1 \'b5\'c8\'b4\'d9.\par
 \par
 \par
\par
\'b8\'b8\'be\'e0 \'c3\'d6\'b4\'eb \'b0\'f8\'bb\'e7 \'b0\'a1\'b4\'c9 \'b1\'ed\'c0\'cc K = 1\'b7\'ce \'c1\'d6\'be\'ee\'c1\'fa \'b0\'e6\'bf\'ec,\par
\par
\'be\'c6\'b7\'a1 [Fig. 3]\'b0\'fa \'b0\'b0\'c0\'cc \'bb\'a1\'b0\'a3\'bb\'f6 \'ba\'ce\'ba\'d0\'c0\'c7 \'b3\'f4\'c0\'cc\'b8\'a6 9\'bf\'a1\'bc\'ad 8\'b7\'ce \'b1\'f0\'c0\'b8\'b8\'e9 \'b1\'e6\'c0\'cc\'b0\'a1 6\'c0\'ce \'b5\'ee\'bb\'ea\'b7\'ce\'b8\'a6 \'b8\'b8\'b5\'e9 \'bc\'f6 \'c0\'d6\'b4\'d9.\par
 \par
\par
\par
\'c0\'cc \'bf\'b9\'bf\'a1\'bc\'ad \'b8\'b8\'b5\'e9 \'bc\'f6 \'c0\'d6\'b4\'c2 \'b0\'a1\'c0\'e5 \'b1\'e4 \'b5\'ee\'bb\'ea\'b7\'ce\'b4\'c2 \'c0\'a7\'bf\'cd \'b0\'b0\'c0\'b8\'b8\'e7, \'c3\'e2\'b7\'c2\'c7\'d2 \'c1\'a4\'b4\'e4\'c0\'ba 6\'c0\'cc \'b5\'c8\'b4\'d9.\par
\par
\par
[\'c1\'a6\'be\'e0 \'bb\'e7\'c7\'d7]\par
\par
1. \'bd\'c3\'b0\'a3 \'c1\'a6\'c7\'d1 : \'c3\'d6\'b4\'eb 50\'b0\'b3 \'c5\'d7\'bd\'ba\'c6\'ae \'c4\'c9\'c0\'cc\'bd\'ba\'b8\'a6 \'b8\'f0\'b5\'ce \'c5\'eb\'b0\'fa\'c7\'cf\'b4\'c2 \'b5\'a5 C/C++/Java \'b8\'f0\'b5\'ce 3\'c3\'ca\par
\par
2. \'c1\'f6\'b5\'b5\'c0\'c7 \'c7\'d1 \'ba\'af\'c0\'c7 \'b1\'e6\'c0\'cc N\'c0\'ba 3 \'c0\'cc\'bb\'f3 8 \'c0\'cc\'c7\'cf\'c0\'c7 \'c1\'a4\'bc\'f6\'c0\'cc\'b4\'d9. (3 \'a1\'c2 N \'a1\'c2 8)\par
\par
3. \'c3\'d6\'b4\'eb \'b0\'f8\'bb\'e7 \'b0\'a1\'b4\'c9 \'b1\'ed\'c0\'cc K\'b4\'c2 1 \'c0\'cc\'bb\'f3 5 \'c0\'cc\'c7\'cf\'c0\'c7 \'c1\'a4\'bc\'f6\'c0\'cc\'b4\'d9. (1 \'a1\'c2 K \'a1\'c2 5)\par
\par
4. \'c1\'f6\'b5\'b5\'bf\'a1 \'b3\'aa\'c5\'b8\'b3\'aa\'b4\'c2 \'c1\'f6\'c7\'fc\'c0\'c7 \'b3\'f4\'c0\'cc\'b4\'c2 1 \'c0\'cc\'bb\'f3 20 \'c0\'cc\'c7\'cf\'c0\'c7 \'c1\'a4\'bc\'f6\'c0\'cc\'b4\'d9.\par
\par
5. \'c1\'f6\'b5\'b5\'bf\'a1\'bc\'ad \'b0\'a1\'c0\'e5 \'b3\'f4\'c0\'ba \'ba\'c0\'bf\'ec\'b8\'ae\'b4\'c2 \'c3\'d6\'b4\'eb 5\'b0\'b3\'c0\'cc\'b4\'d9.\par
\par
6. \'c1\'f6\'c7\'fc\'c0\'ba \'c1\'a4\'bc\'f6 \'b4\'dc\'c0\'a7\'b7\'ce\'b8\'b8 \'b1\'f0\'c0\'bb \'bc\'f6 \'c0\'d6\'b4\'d9.\par
\par
7. \'c7\'ca\'bf\'e4\'c7\'d1 \'b0\'e6\'bf\'ec \'c1\'f6\'c7\'fc\'c0\'bb \'b1\'f0\'be\'c6 \'b3\'f4\'c0\'cc\'b8\'a6 1\'ba\'b8\'b4\'d9 \'c0\'db\'b0\'d4 \'b8\'b8\'b5\'e5\'b4\'c2 \'b0\'cd\'b5\'b5 \'b0\'a1\'b4\'c9\'c7\'cf\'b4\'d9.\par
\par
[\'c0\'d4\'b7\'c2]\par
\par
\'c0\'d4\'b7\'c2\'c0\'c7 \'b8\'c7 \'c3\'b9 \'c1\'d9\'bf\'a1\'b4\'c2 \'c3\'d1 \'c5\'d7\'bd\'ba\'c6\'ae \'c4\'c9\'c0\'cc\'bd\'ba\'c0\'c7 \'b0\'b3\'bc\'f6 T\'b0\'a1 \'c1\'d6\'be\'ee\'c1\'f6\'b0\'ed, \'b1\'d7 \'b4\'d9\'c0\'bd \'c1\'d9\'ba\'ce\'c5\'cd T\'b0\'b3\'c0\'c7 \'c5\'d7\'bd\'ba\'c6\'ae \'c4\'c9\'c0\'cc\'bd\'ba\'b0\'a1 \'c1\'d6\'be\'ee\'c1\'f8\'b4\'d9.\par
\par
\'b0\'a2 \'c5\'d7\'bd\'ba\'c6\'ae \'c4\'c9\'c0\'cc\'bd\'ba\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'c1\'d9\'bf\'a1\'b4\'c2 \'c1\'f6\'b5\'b5\'c0\'c7 \'c7\'d1 \'ba\'af\'c0\'c7 \'b1\'e6\'c0\'cc N, \'c3\'d6\'b4\'eb \'b0\'f8\'bb\'e7 \'b0\'a1\'b4\'c9 \'b1\'ed\'c0\'cc K\'b0\'a1 \'c2\'f7\'b7\'ca\'b7\'ce \'c1\'d6\'be\'ee\'c1\'f8\'b4\'d9.\par
\par
\'b1\'d7 \'b4\'d9\'c0\'bd N\'b0\'b3\'c0\'c7 \'c1\'d9\'bf\'a1\'b4\'c2 N * N \'c5\'a9\'b1\'e2\'c0\'c7 \'c1\'f6\'b5\'b5 \'c1\'a4\'ba\'b8\'b0\'a1 \'c1\'d6\'be\'ee\'c1\'f8\'b4\'d9.\par
\par
[\'c3\'e2\'b7\'c2]\par
\par
\'c5\'d7\'bd\'ba\'c6\'ae \'c4\'c9\'c0\'cc\'bd\'ba \'b0\'b3\'bc\'f6\'b8\'b8\'c5\'ad T\'b0\'b3\'c0\'c7 \'c1\'d9\'bf\'a1 \'b0\'a2\'b0\'a2\'c0\'c7 \'c5\'d7\'bd\'ba\'c6\'ae \'c4\'c9\'c0\'cc\'bd\'ba\'bf\'a1 \'b4\'eb\'c7\'d1 \'b4\'e4\'c0\'bb \'c3\'e2\'b7\'c2\'c7\'d1\'b4\'d9.\par
\par
\'b0\'a2 \'c1\'d9\'c0\'ba "#t"\'b7\'ce \'bd\'c3\'c0\'db\'c7\'cf\'b0\'ed \'b0\'f8\'b9\'e9\'c0\'bb \'c7\'cf\'b3\'aa \'b5\'d0 \'b4\'d9\'c0\'bd \'c1\'a4\'b4\'e4\'c0\'bb \'c3\'e2\'b7\'c2\'c7\'d1\'b4\'d9. (t\'b4\'c2 1\'ba\'ce\'c5\'cd \'bd\'c3\'c0\'db\'c7\'cf\'b4\'c2 \'c5\'d7\'bd\'ba\'c6\'ae \'c4\'c9\'c0\'cc\'bd\'ba\'c0\'c7 \'b9\'f8\'c8\'a3\'c0\'cc\'b4\'d9)\par
\par
\'c3\'e2\'b7\'c2\'c7\'d8\'be\'df \'c7\'d2 \'c1\'a4\'b4\'e4\'c0\'ba \'b8\'b8\'b5\'e9 \'bc\'f6 \'c0\'d6\'b4\'c2 \'b0\'a1\'c0\'e5 \'b1\'e4 \'b5\'ee\'bb\'ea\'b7\'ce\'c0\'c7 \'b1\'e6\'c0\'cc\'c0\'cc\'b4\'d9.\par
\pard\sa200\sl240\slmult1\'c4\'da\'b5\'e5 \par
#include<iostream>\par
#include <vector>\par
#include <queue>\par
using namespace std;\par
int N, K, T ;\par
int map[8][8];\par
int _max;\par
struct zen\{\par
\tab int i;\par
\tab int j;\par
\tab int l=1;\par
\};\par
int ans=0;\par
queue<zen> zenith;\par
queue<zen> node;\par
\par
int dir[4][2]=\{\par
    \{0,1\},\par
    \{1,0\},\par
    \{0,-1\},\par
    \{-1,0\}\}\par
\tab ;\par
int inbound(int i, int j)\par
\{\par
\tab if(i>=0&&i<N&&j>=0&&j<N)\par
\tab\tab return 1;\par
\tab return 0;\par
\tab\par
\}\par
int main()\{\par
    \par
   \par
    zen tmp;\par
    cin >>T ; \par
    \par
   \tab for(int tc = 1 ; tc<=T ; tc++)\par
    \{\par
    _max=0;\par
\tab ans=0;\par
        cin >> N >> K ;\par
        \par
     for(int i=0; i<N;i++)\{\par
         for(int j=0;j<N;j++)\{\par
           \tab cin>>map[i][j];\par
             if( map[i][j] > _max )\par
                 _max=map[i][j];\par
     \tab     \}\par
     \tab\}\par
        for(int i=0; i<N;i++)\{\par
         for(int j=0;j<N;j++)\{\par
\tab\tab\tab if(_max==map[i][j])\{\par
\tab\tab\tab\tab tmp.i = i;\par
\tab\tab\tab  \tab tmp.j = j;\par
\tab\tab\tab\tab tmp.l = 1;\par
                zenith.push(tmp);\par
\tab\tab\tab\tab\}\par
     \tab     \}\par
     \tab\}\par
\tab\tab while(!zenith.empty())\{\par
        \tab\par
\tab\tab\tab //node.push(zenith.front());\par
\tab\tab\tab //zenith.pop();\par
\tab\tab\par
\tab\tab for(int q=0; q<N*N;q++)\par
\tab\tab\{\tab for(int k=1;k<=K;k++)\{\par
\tab\tab\tab node.push(zenith.front());\par
\tab\tab\tab map[q/N][q%N]-=k;\par
\tab\tab  \tab\par
\tab\tab while(!node.empty())\{\par
\tab\tab\tab zen _node = node.front();\par
\tab\tab\tab node.pop();\par
\tab\tab\tab if(ans<_node.l)\par
\tab\tab\tab\tab ans=_node.l;\par
\tab\tab\tab\par
\tab\tab\tab for(int d=0; d<4;d++)\{\par
\tab\tab\tab\tab int ni = _node.i +dir[d][0];\par
\tab\tab\tab\tab int nj = _node.j +dir[d][1];\par
\tab\tab\tab\tab int nt = _node.l +1;\par
\tab\tab\tab\tab\par
\tab\tab\tab\tab if(inbound(ni,nj)&&map[_node.i][_node.j]>map[ni][nj])\par
\tab\tab\tab\tab\{\tab zen temp;\par
\tab\tab\tab\tab  \tab temp.i = ni;\par
\tab\tab\tab\tab  \tab temp.j = nj;\par
\tab\tab\tab\tab  \tab temp.l = nt;\par
\tab\tab\tab\tab\tab node.push(temp);\par
\tab\tab\tab\tab\}\par
\tab\tab\tab\}\par
\tab\tab\}//node.empty\par
\tab\tab\tab map[q/N][q%N]+=k;\par
\tab\tab\}//for k\par
\tab\tab\}//for q\par
\tab\tab zenith.pop();\par
\tab\tab\par
\tab\tab\}//zenith.empty\par
        \par
\tab cout<<"#"<<tc<<" "<<ans<<endl;\par
\tab\tab\par
\tab\tab\par
        \par
    \}   \par
return 0;\par
\}\par
\pard\sa200\sl276\slmult1\par
}
 